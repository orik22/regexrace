# As the orchestration need is simple to declare,
# Service and ReplicationController yamls files are combined.
apiVersion: v1
kind: ReplicationController
metadata:
  name: web-controller
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - image: gcr.io/regexrace/regexrace:v1
        imagePullPolicy: Always
        name: web
        resources:
          requests:
            cpu: 50m
        ports:
        - containerPort: 8080
          name: http-server
        livenessProbe:
          httpGet:
            path: /status
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: /status
            port: 8080
          periodSeconds: 2
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: default
  labels:
    app: web
spec:
  type: NodePort
  # loadBalancerIP: 104.196.118.31
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: web
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: webmap
  namespace: default
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: regexrace.org
    http:
      paths:
      - path: /
        backend:
          serviceName: web
          servicePort: 80
  tls:
  - secretName: web-tls
    hosts:
    - regexrace.org
